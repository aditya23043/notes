// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "FFT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic FFT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic FFT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> FFT::ap_ST_fsm_state1 = "1";
const sc_lv<5> FFT::ap_ST_fsm_state2 = "10";
const sc_lv<5> FFT::ap_ST_fsm_state3 = "100";
const sc_lv<5> FFT::ap_ST_fsm_state4 = "1000";
const sc_lv<5> FFT::ap_ST_fsm_state5 = "10000";
const sc_lv<32> FFT::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> FFT::ap_const_lv32_1 = "1";
const sc_lv<1> FFT::ap_const_lv1_0 = "0";
const sc_lv<32> FFT::ap_const_lv32_2 = "10";
const sc_lv<4> FFT::ap_const_lv4_0 = "0000";
const sc_lv<32> FFT::ap_const_lv32_3 = "11";
const sc_lv<1> FFT::ap_const_lv1_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_4 = "100";
const sc_lv<4> FFT::ap_const_lv4_8 = "1000";
const sc_lv<4> FFT::ap_const_lv4_1 = "1";
const bool FFT::ap_const_boolean_1 = true;

FFT::FFT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    rev8_U = new FFT_rev8("rev8_U");
    rev8_U->clk(ap_clk);
    rev8_U->reset(ap_rst);
    rev8_U->address0(rev8_address0);
    rev8_U->ce0(rev8_ce0);
    rev8_U->q0(rev8_q0);
    FFT_rev_real_U = new FFT_FFT_rev_real("FFT_rev_real_U");
    FFT_rev_real_U->clk(ap_clk);
    FFT_rev_real_U->reset(ap_rst);
    FFT_rev_real_U->address0(FFT_rev_real_address0);
    FFT_rev_real_U->ce0(FFT_rev_real_ce0);
    FFT_rev_real_U->we0(FFT_rev_real_we0);
    FFT_rev_real_U->d0(FFT_input_real_q0);
    FFT_rev_real_U->q0(FFT_rev_real_q0);
    FFT_rev_real_U->address1(grp_FFT_stages_fu_120_FFT_input_real_address1);
    FFT_rev_real_U->ce1(FFT_rev_real_ce1);
    FFT_rev_real_U->q1(FFT_rev_real_q1);
    FFT_rev_imag_U = new FFT_FFT_rev_real("FFT_rev_imag_U");
    FFT_rev_imag_U->clk(ap_clk);
    FFT_rev_imag_U->reset(ap_rst);
    FFT_rev_imag_U->address0(FFT_rev_imag_address0);
    FFT_rev_imag_U->ce0(FFT_rev_imag_ce0);
    FFT_rev_imag_U->we0(FFT_rev_imag_we0);
    FFT_rev_imag_U->d0(FFT_input_imag_q0);
    FFT_rev_imag_U->q0(FFT_rev_imag_q0);
    FFT_rev_imag_U->address1(grp_FFT_stages_fu_120_FFT_input_imag_address1);
    FFT_rev_imag_U->ce1(FFT_rev_imag_ce1);
    FFT_rev_imag_U->q1(FFT_rev_imag_q1);
    grp_FFT_stages_fu_120 = new FFT_stages("grp_FFT_stages_fu_120");
    grp_FFT_stages_fu_120->ap_clk(ap_clk);
    grp_FFT_stages_fu_120->ap_rst(ap_rst);
    grp_FFT_stages_fu_120->ap_start(grp_FFT_stages_fu_120_ap_start);
    grp_FFT_stages_fu_120->ap_done(grp_FFT_stages_fu_120_ap_done);
    grp_FFT_stages_fu_120->ap_idle(grp_FFT_stages_fu_120_ap_idle);
    grp_FFT_stages_fu_120->ap_ready(grp_FFT_stages_fu_120_ap_ready);
    grp_FFT_stages_fu_120->FFT_input_real_address0(grp_FFT_stages_fu_120_FFT_input_real_address0);
    grp_FFT_stages_fu_120->FFT_input_real_ce0(grp_FFT_stages_fu_120_FFT_input_real_ce0);
    grp_FFT_stages_fu_120->FFT_input_real_q0(FFT_rev_real_q0);
    grp_FFT_stages_fu_120->FFT_input_real_address1(grp_FFT_stages_fu_120_FFT_input_real_address1);
    grp_FFT_stages_fu_120->FFT_input_real_ce1(grp_FFT_stages_fu_120_FFT_input_real_ce1);
    grp_FFT_stages_fu_120->FFT_input_real_q1(FFT_rev_real_q1);
    grp_FFT_stages_fu_120->FFT_input_imag_address0(grp_FFT_stages_fu_120_FFT_input_imag_address0);
    grp_FFT_stages_fu_120->FFT_input_imag_ce0(grp_FFT_stages_fu_120_FFT_input_imag_ce0);
    grp_FFT_stages_fu_120->FFT_input_imag_q0(FFT_rev_imag_q0);
    grp_FFT_stages_fu_120->FFT_input_imag_address1(grp_FFT_stages_fu_120_FFT_input_imag_address1);
    grp_FFT_stages_fu_120->FFT_input_imag_ce1(grp_FFT_stages_fu_120_FFT_input_imag_ce1);
    grp_FFT_stages_fu_120->FFT_input_imag_q1(FFT_rev_imag_q1);
    grp_FFT_stages_fu_120->FFT_output_real_address0(grp_FFT_stages_fu_120_FFT_output_real_address0);
    grp_FFT_stages_fu_120->FFT_output_real_ce0(grp_FFT_stages_fu_120_FFT_output_real_ce0);
    grp_FFT_stages_fu_120->FFT_output_real_we0(grp_FFT_stages_fu_120_FFT_output_real_we0);
    grp_FFT_stages_fu_120->FFT_output_real_d0(grp_FFT_stages_fu_120_FFT_output_real_d0);
    grp_FFT_stages_fu_120->FFT_output_real_address1(grp_FFT_stages_fu_120_FFT_output_real_address1);
    grp_FFT_stages_fu_120->FFT_output_real_ce1(grp_FFT_stages_fu_120_FFT_output_real_ce1);
    grp_FFT_stages_fu_120->FFT_output_real_we1(grp_FFT_stages_fu_120_FFT_output_real_we1);
    grp_FFT_stages_fu_120->FFT_output_real_d1(grp_FFT_stages_fu_120_FFT_output_real_d1);
    grp_FFT_stages_fu_120->FFT_output_imag_address0(grp_FFT_stages_fu_120_FFT_output_imag_address0);
    grp_FFT_stages_fu_120->FFT_output_imag_ce0(grp_FFT_stages_fu_120_FFT_output_imag_ce0);
    grp_FFT_stages_fu_120->FFT_output_imag_we0(grp_FFT_stages_fu_120_FFT_output_imag_we0);
    grp_FFT_stages_fu_120->FFT_output_imag_d0(grp_FFT_stages_fu_120_FFT_output_imag_d0);
    grp_FFT_stages_fu_120->FFT_output_imag_address1(grp_FFT_stages_fu_120_FFT_output_imag_address1);
    grp_FFT_stages_fu_120->FFT_output_imag_ce1(grp_FFT_stages_fu_120_FFT_output_imag_ce1);
    grp_FFT_stages_fu_120->FFT_output_imag_we1(grp_FFT_stages_fu_120_FFT_output_imag_we1);
    grp_FFT_stages_fu_120->FFT_output_imag_d1(grp_FFT_stages_fu_120_FFT_output_imag_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FFT_input_imag_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln18_1_fu_147_p1 );

    SC_METHOD(thread_FFT_input_imag_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_FFT_input_real_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln18_1_fu_147_p1 );

    SC_METHOD(thread_FFT_input_real_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_FFT_output_imag_address0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_imag_address0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_imag_address1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_imag_address1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_imag_ce0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_imag_ce0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_imag_ce1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_imag_ce1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_imag_d0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_imag_d0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_imag_d1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_imag_d1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_imag_we0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_imag_we0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_imag_we1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_imag_we1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_real_address0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_real_address0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_real_address1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_real_address1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_real_ce0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_real_ce0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_real_ce1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_real_ce1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_real_d0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_real_d0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_real_d1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_real_d1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_real_we0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_real_we0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_output_real_we1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_output_real_we1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_rev_imag_address0);
    sensitive << ( zext_ln18_reg_161 );
    sensitive << ( grp_FFT_stages_fu_120_FFT_input_imag_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_rev_imag_ce0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_input_imag_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_rev_imag_ce1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_input_imag_ce1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_rev_imag_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_FFT_rev_real_address0);
    sensitive << ( zext_ln18_reg_161 );
    sensitive << ( grp_FFT_stages_fu_120_FFT_input_real_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_rev_real_ce0);
    sensitive << ( grp_FFT_stages_fu_120_FFT_input_real_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_rev_real_ce1);
    sensitive << ( grp_FFT_stages_fu_120_FFT_input_real_ce1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FFT_rev_real_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_FFT_stages_fu_120_ap_done );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_FFT_stages_fu_120_ap_done );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_FFT_stages_fu_120_ap_start);
    sensitive << ( grp_FFT_stages_fu_120_ap_start_reg );

    SC_METHOD(thread_i_fu_136_p2);
    sensitive << ( i_0_i_reg_109 );

    SC_METHOD(thread_icmp_ln17_fu_130_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_i_reg_109 );

    SC_METHOD(thread_rev8_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln18_fu_142_p1 );

    SC_METHOD(thread_rev8_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_zext_ln18_1_fu_147_p1);
    sensitive << ( rev8_q0 );

    SC_METHOD(thread_zext_ln18_fu_142_p1);
    sensitive << ( i_0_i_reg_109 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln17_fu_130_p2 );
    sensitive << ( grp_FFT_stages_fu_120_ap_done );
    sensitive << ( ap_CS_fsm_state5 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    grp_FFT_stages_fu_120_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "FFT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, FFT_input_real_address0, "(port)FFT_input_real_address0");
    sc_trace(mVcdFile, FFT_input_real_ce0, "(port)FFT_input_real_ce0");
    sc_trace(mVcdFile, FFT_input_real_q0, "(port)FFT_input_real_q0");
    sc_trace(mVcdFile, FFT_input_imag_address0, "(port)FFT_input_imag_address0");
    sc_trace(mVcdFile, FFT_input_imag_ce0, "(port)FFT_input_imag_ce0");
    sc_trace(mVcdFile, FFT_input_imag_q0, "(port)FFT_input_imag_q0");
    sc_trace(mVcdFile, FFT_output_real_address0, "(port)FFT_output_real_address0");
    sc_trace(mVcdFile, FFT_output_real_ce0, "(port)FFT_output_real_ce0");
    sc_trace(mVcdFile, FFT_output_real_we0, "(port)FFT_output_real_we0");
    sc_trace(mVcdFile, FFT_output_real_d0, "(port)FFT_output_real_d0");
    sc_trace(mVcdFile, FFT_output_real_address1, "(port)FFT_output_real_address1");
    sc_trace(mVcdFile, FFT_output_real_ce1, "(port)FFT_output_real_ce1");
    sc_trace(mVcdFile, FFT_output_real_we1, "(port)FFT_output_real_we1");
    sc_trace(mVcdFile, FFT_output_real_d1, "(port)FFT_output_real_d1");
    sc_trace(mVcdFile, FFT_output_imag_address0, "(port)FFT_output_imag_address0");
    sc_trace(mVcdFile, FFT_output_imag_ce0, "(port)FFT_output_imag_ce0");
    sc_trace(mVcdFile, FFT_output_imag_we0, "(port)FFT_output_imag_we0");
    sc_trace(mVcdFile, FFT_output_imag_d0, "(port)FFT_output_imag_d0");
    sc_trace(mVcdFile, FFT_output_imag_address1, "(port)FFT_output_imag_address1");
    sc_trace(mVcdFile, FFT_output_imag_ce1, "(port)FFT_output_imag_ce1");
    sc_trace(mVcdFile, FFT_output_imag_we1, "(port)FFT_output_imag_we1");
    sc_trace(mVcdFile, FFT_output_imag_d1, "(port)FFT_output_imag_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, rev8_address0, "rev8_address0");
    sc_trace(mVcdFile, rev8_ce0, "rev8_ce0");
    sc_trace(mVcdFile, rev8_q0, "rev8_q0");
    sc_trace(mVcdFile, i_fu_136_p2, "i_fu_136_p2");
    sc_trace(mVcdFile, i_reg_156, "i_reg_156");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln18_fu_142_p1, "zext_ln18_fu_142_p1");
    sc_trace(mVcdFile, zext_ln18_reg_161, "zext_ln18_reg_161");
    sc_trace(mVcdFile, icmp_ln17_fu_130_p2, "icmp_ln17_fu_130_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, FFT_rev_real_address0, "FFT_rev_real_address0");
    sc_trace(mVcdFile, FFT_rev_real_ce0, "FFT_rev_real_ce0");
    sc_trace(mVcdFile, FFT_rev_real_we0, "FFT_rev_real_we0");
    sc_trace(mVcdFile, FFT_rev_real_q0, "FFT_rev_real_q0");
    sc_trace(mVcdFile, FFT_rev_real_ce1, "FFT_rev_real_ce1");
    sc_trace(mVcdFile, FFT_rev_real_q1, "FFT_rev_real_q1");
    sc_trace(mVcdFile, FFT_rev_imag_address0, "FFT_rev_imag_address0");
    sc_trace(mVcdFile, FFT_rev_imag_ce0, "FFT_rev_imag_ce0");
    sc_trace(mVcdFile, FFT_rev_imag_we0, "FFT_rev_imag_we0");
    sc_trace(mVcdFile, FFT_rev_imag_q0, "FFT_rev_imag_q0");
    sc_trace(mVcdFile, FFT_rev_imag_ce1, "FFT_rev_imag_ce1");
    sc_trace(mVcdFile, FFT_rev_imag_q1, "FFT_rev_imag_q1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_ap_start, "grp_FFT_stages_fu_120_ap_start");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_ap_done, "grp_FFT_stages_fu_120_ap_done");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_ap_idle, "grp_FFT_stages_fu_120_ap_idle");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_ap_ready, "grp_FFT_stages_fu_120_ap_ready");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_input_real_address0, "grp_FFT_stages_fu_120_FFT_input_real_address0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_input_real_ce0, "grp_FFT_stages_fu_120_FFT_input_real_ce0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_input_real_address1, "grp_FFT_stages_fu_120_FFT_input_real_address1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_input_real_ce1, "grp_FFT_stages_fu_120_FFT_input_real_ce1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_input_imag_address0, "grp_FFT_stages_fu_120_FFT_input_imag_address0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_input_imag_ce0, "grp_FFT_stages_fu_120_FFT_input_imag_ce0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_input_imag_address1, "grp_FFT_stages_fu_120_FFT_input_imag_address1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_input_imag_ce1, "grp_FFT_stages_fu_120_FFT_input_imag_ce1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_real_address0, "grp_FFT_stages_fu_120_FFT_output_real_address0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_real_ce0, "grp_FFT_stages_fu_120_FFT_output_real_ce0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_real_we0, "grp_FFT_stages_fu_120_FFT_output_real_we0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_real_d0, "grp_FFT_stages_fu_120_FFT_output_real_d0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_real_address1, "grp_FFT_stages_fu_120_FFT_output_real_address1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_real_ce1, "grp_FFT_stages_fu_120_FFT_output_real_ce1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_real_we1, "grp_FFT_stages_fu_120_FFT_output_real_we1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_real_d1, "grp_FFT_stages_fu_120_FFT_output_real_d1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_imag_address0, "grp_FFT_stages_fu_120_FFT_output_imag_address0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_imag_ce0, "grp_FFT_stages_fu_120_FFT_output_imag_ce0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_imag_we0, "grp_FFT_stages_fu_120_FFT_output_imag_we0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_imag_d0, "grp_FFT_stages_fu_120_FFT_output_imag_d0");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_imag_address1, "grp_FFT_stages_fu_120_FFT_output_imag_address1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_imag_ce1, "grp_FFT_stages_fu_120_FFT_output_imag_ce1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_imag_we1, "grp_FFT_stages_fu_120_FFT_output_imag_we1");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_FFT_output_imag_d1, "grp_FFT_stages_fu_120_FFT_output_imag_d1");
    sc_trace(mVcdFile, i_0_i_reg_109, "i_0_i_reg_109");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_FFT_stages_fu_120_ap_start_reg, "grp_FFT_stages_fu_120_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln18_1_fu_147_p1, "zext_ln18_1_fu_147_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("FFT.hdltvin.dat");
    mHdltvoutHandle.open("FFT.hdltvout.dat");
}

FFT::~FFT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete rev8_U;
    delete FFT_rev_real_U;
    delete FFT_rev_imag_U;
    delete grp_FFT_stages_fu_120;
}

void FFT::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_FFT_stages_fu_120_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln17_fu_130_p2.read(), ap_const_lv1_1))) {
            grp_FFT_stages_fu_120_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_FFT_stages_fu_120_ap_ready.read())) {
            grp_FFT_stages_fu_120_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_i_reg_109 = i_reg_156.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_i_reg_109 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_156 = i_fu_136_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_130_p2.read(), ap_const_lv1_0))) {
        zext_ln18_reg_161 = zext_ln18_fu_142_p1.read();
    }
}

void FFT::thread_FFT_input_imag_address0() {
    FFT_input_imag_address0 =  (sc_lv<3>) (zext_ln18_1_fu_147_p1.read());
}

void FFT::thread_FFT_input_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        FFT_input_imag_ce0 = ap_const_logic_1;
    } else {
        FFT_input_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_FFT_input_real_address0() {
    FFT_input_real_address0 =  (sc_lv<3>) (zext_ln18_1_fu_147_p1.read());
}

void FFT::thread_FFT_input_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        FFT_input_real_ce0 = ap_const_logic_1;
    } else {
        FFT_input_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_FFT_output_imag_address0() {
    FFT_output_imag_address0 = grp_FFT_stages_fu_120_FFT_output_imag_address0.read();
}

void FFT::thread_FFT_output_imag_address1() {
    FFT_output_imag_address1 = grp_FFT_stages_fu_120_FFT_output_imag_address1.read();
}

void FFT::thread_FFT_output_imag_ce0() {
    FFT_output_imag_ce0 = grp_FFT_stages_fu_120_FFT_output_imag_ce0.read();
}

void FFT::thread_FFT_output_imag_ce1() {
    FFT_output_imag_ce1 = grp_FFT_stages_fu_120_FFT_output_imag_ce1.read();
}

void FFT::thread_FFT_output_imag_d0() {
    FFT_output_imag_d0 = grp_FFT_stages_fu_120_FFT_output_imag_d0.read();
}

void FFT::thread_FFT_output_imag_d1() {
    FFT_output_imag_d1 = grp_FFT_stages_fu_120_FFT_output_imag_d1.read();
}

void FFT::thread_FFT_output_imag_we0() {
    FFT_output_imag_we0 = grp_FFT_stages_fu_120_FFT_output_imag_we0.read();
}

void FFT::thread_FFT_output_imag_we1() {
    FFT_output_imag_we1 = grp_FFT_stages_fu_120_FFT_output_imag_we1.read();
}

void FFT::thread_FFT_output_real_address0() {
    FFT_output_real_address0 = grp_FFT_stages_fu_120_FFT_output_real_address0.read();
}

void FFT::thread_FFT_output_real_address1() {
    FFT_output_real_address1 = grp_FFT_stages_fu_120_FFT_output_real_address1.read();
}

void FFT::thread_FFT_output_real_ce0() {
    FFT_output_real_ce0 = grp_FFT_stages_fu_120_FFT_output_real_ce0.read();
}

void FFT::thread_FFT_output_real_ce1() {
    FFT_output_real_ce1 = grp_FFT_stages_fu_120_FFT_output_real_ce1.read();
}

void FFT::thread_FFT_output_real_d0() {
    FFT_output_real_d0 = grp_FFT_stages_fu_120_FFT_output_real_d0.read();
}

void FFT::thread_FFT_output_real_d1() {
    FFT_output_real_d1 = grp_FFT_stages_fu_120_FFT_output_real_d1.read();
}

void FFT::thread_FFT_output_real_we0() {
    FFT_output_real_we0 = grp_FFT_stages_fu_120_FFT_output_real_we0.read();
}

void FFT::thread_FFT_output_real_we1() {
    FFT_output_real_we1 = grp_FFT_stages_fu_120_FFT_output_real_we1.read();
}

void FFT::thread_FFT_rev_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        FFT_rev_imag_address0 =  (sc_lv<3>) (zext_ln18_reg_161.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FFT_rev_imag_address0 = grp_FFT_stages_fu_120_FFT_input_imag_address0.read();
    } else {
        FFT_rev_imag_address0 = "XXX";
    }
}

void FFT::thread_FFT_rev_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        FFT_rev_imag_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FFT_rev_imag_ce0 = grp_FFT_stages_fu_120_FFT_input_imag_ce0.read();
    } else {
        FFT_rev_imag_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_FFT_rev_imag_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FFT_rev_imag_ce1 = grp_FFT_stages_fu_120_FFT_input_imag_ce1.read();
    } else {
        FFT_rev_imag_ce1 = ap_const_logic_0;
    }
}

void FFT::thread_FFT_rev_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        FFT_rev_imag_we0 = ap_const_logic_1;
    } else {
        FFT_rev_imag_we0 = ap_const_logic_0;
    }
}

void FFT::thread_FFT_rev_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        FFT_rev_real_address0 =  (sc_lv<3>) (zext_ln18_reg_161.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FFT_rev_real_address0 = grp_FFT_stages_fu_120_FFT_input_real_address0.read();
    } else {
        FFT_rev_real_address0 = "XXX";
    }
}

void FFT::thread_FFT_rev_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        FFT_rev_real_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FFT_rev_real_ce0 = grp_FFT_stages_fu_120_FFT_input_real_ce0.read();
    } else {
        FFT_rev_real_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_FFT_rev_real_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FFT_rev_real_ce1 = grp_FFT_stages_fu_120_FFT_input_real_ce1.read();
    } else {
        FFT_rev_real_ce1 = ap_const_logic_0;
    }
}

void FFT::thread_FFT_rev_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        FFT_rev_real_we0 = ap_const_logic_1;
    } else {
        FFT_rev_real_we0 = ap_const_logic_0;
    }
}

void FFT::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void FFT::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void FFT::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void FFT::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void FFT::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void FFT::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(grp_FFT_stages_fu_120_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void FFT::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void FFT::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(grp_FFT_stages_fu_120_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void FFT::thread_grp_FFT_stages_fu_120_ap_start() {
    grp_FFT_stages_fu_120_ap_start = grp_FFT_stages_fu_120_ap_start_reg.read();
}

void FFT::thread_i_fu_136_p2() {
    i_fu_136_p2 = (!i_0_i_reg_109.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_i_reg_109.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void FFT::thread_icmp_ln17_fu_130_p2() {
    icmp_ln17_fu_130_p2 = (!i_0_i_reg_109.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_109.read() == ap_const_lv4_8);
}

void FFT::thread_rev8_address0() {
    rev8_address0 =  (sc_lv<3>) (zext_ln18_fu_142_p1.read());
}

void FFT::thread_rev8_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        rev8_ce0 = ap_const_logic_1;
    } else {
        rev8_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_zext_ln18_1_fu_147_p1() {
    zext_ln18_1_fu_147_p1 = esl_zext<64,3>(rev8_q0.read());
}

void FFT::thread_zext_ln18_fu_142_p1() {
    zext_ln18_fu_142_p1 = esl_zext<64,4>(i_0_i_reg_109.read());
}

void FFT::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_130_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_FFT_stages_fu_120_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void FFT::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_input_real_address0\" :  \"" << FFT_input_real_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_input_real_ce0\" :  \"" << FFT_input_real_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"FFT_input_real_q0\" :  \"" << FFT_input_real_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_input_imag_address0\" :  \"" << FFT_input_imag_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_input_imag_ce0\" :  \"" << FFT_input_imag_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"FFT_input_imag_q0\" :  \"" << FFT_input_imag_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_real_address0\" :  \"" << FFT_output_real_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_real_ce0\" :  \"" << FFT_output_real_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_real_we0\" :  \"" << FFT_output_real_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_real_d0\" :  \"" << FFT_output_real_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_real_address1\" :  \"" << FFT_output_real_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_real_ce1\" :  \"" << FFT_output_real_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_real_we1\" :  \"" << FFT_output_real_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_real_d1\" :  \"" << FFT_output_real_d1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_imag_address0\" :  \"" << FFT_output_imag_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_imag_ce0\" :  \"" << FFT_output_imag_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_imag_we0\" :  \"" << FFT_output_imag_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_imag_d0\" :  \"" << FFT_output_imag_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_imag_address1\" :  \"" << FFT_output_imag_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_imag_ce1\" :  \"" << FFT_output_imag_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_imag_we1\" :  \"" << FFT_output_imag_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"FFT_output_imag_d1\" :  \"" << FFT_output_imag_d1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

