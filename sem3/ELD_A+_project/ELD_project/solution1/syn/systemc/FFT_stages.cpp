// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "FFT_stages.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic FFT_stages::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic FFT_stages::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<43> FFT_stages::ap_ST_fsm_state1 = "1";
const sc_lv<43> FFT_stages::ap_ST_fsm_state2 = "10";
const sc_lv<43> FFT_stages::ap_ST_fsm_state3 = "100";
const sc_lv<43> FFT_stages::ap_ST_fsm_state4 = "1000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state5 = "10000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state6 = "100000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state7 = "1000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state8 = "10000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state9 = "100000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state10 = "1000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state11 = "10000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state12 = "100000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<43> FFT_stages::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<32> FFT_stages::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> FFT_stages::ap_const_lv32_7 = "111";
const sc_lv<32> FFT_stages::ap_const_lv32_13 = "10011";
const sc_lv<32> FFT_stages::ap_const_lv32_18 = "11000";
const sc_lv<32> FFT_stages::ap_const_lv32_24 = "100100";
const sc_lv<32> FFT_stages::ap_const_lv32_29 = "101001";
const sc_lv<32> FFT_stages::ap_const_lv32_B = "1011";
const sc_lv<32> FFT_stages::ap_const_lv32_E = "1110";
const sc_lv<32> FFT_stages::ap_const_lv32_1F = "11111";
const sc_lv<32> FFT_stages::ap_const_lv32_1C = "11100";
const sc_lv<32> FFT_stages::ap_const_lv32_1 = "1";
const sc_lv<1> FFT_stages::ap_const_lv1_0 = "0";
const sc_lv<32> FFT_stages::ap_const_lv32_2 = "10";
const sc_lv<32> FFT_stages::ap_const_lv32_9 = "1001";
const sc_lv<32> FFT_stages::ap_const_lv32_A = "1010";
const sc_lv<1> FFT_stages::ap_const_lv1_1 = "1";
const sc_lv<32> FFT_stages::ap_const_lv32_12 = "10010";
const sc_lv<32> FFT_stages::ap_const_lv32_1B = "11011";
const sc_lv<32> FFT_stages::ap_const_lv32_23 = "100011";
const sc_lv<4> FFT_stages::ap_const_lv4_0 = "0000";
const sc_lv<32> FFT_stages::ap_const_lv32_8 = "1000";
const sc_lv<2> FFT_stages::ap_const_lv2_0 = "00";
const sc_lv<32> FFT_stages::ap_const_lv32_1A = "11010";
const sc_lv<32> FFT_stages::ap_const_lv32_2A = "101010";
const sc_lv<3> FFT_stages::ap_const_lv3_0 = "000";
const sc_lv<32> FFT_stages::ap_const_lv32_19 = "11001";
const sc_lv<32> FFT_stages::ap_const_lv32_3 = "11";
const sc_lv<32> FFT_stages::ap_const_lv32_F = "1111";
const sc_lv<32> FFT_stages::ap_const_lv32_14 = "10100";
const sc_lv<32> FFT_stages::ap_const_lv32_20 = "100000";
const sc_lv<32> FFT_stages::ap_const_lv32_25 = "100101";
const sc_lv<3> FFT_stages::ap_const_lv3_1 = "1";
const sc_lv<4> FFT_stages::ap_const_lv4_2 = "10";
const sc_lv<3> FFT_stages::ap_const_lv3_2 = "10";
const sc_lv<2> FFT_stages::ap_const_lv2_2 = "10";
const sc_lv<2> FFT_stages::ap_const_lv2_1 = "1";
const sc_lv<4> FFT_stages::ap_const_lv4_4 = "100";
const sc_lv<32> FFT_stages::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> FFT_stages::ap_const_lv32_BF800000 = "10111111100000000000000000000000";
const sc_lv<3> FFT_stages::ap_const_lv3_4 = "100";
const sc_lv<32> FFT_stages::ap_const_lv32_3F3504F3 = "111111001101010000010011110011";
const sc_lv<32> FFT_stages::ap_const_lv32_BF3504F3 = "10111111001101010000010011110011";
const bool FFT_stages::ap_const_boolean_1 = true;

FFT_stages::FFT_stages(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp1_real_U = new FFT_stages_temp1_real("temp1_real_U");
    temp1_real_U->clk(ap_clk);
    temp1_real_U->reset(ap_rst);
    temp1_real_U->address0(temp1_real_address0);
    temp1_real_U->ce0(temp1_real_ce0);
    temp1_real_U->we0(temp1_real_we0);
    temp1_real_U->d0(reg_415);
    temp1_real_U->q0(temp1_real_q0);
    temp1_real_U->address1(temp1_real_address1);
    temp1_real_U->ce1(temp1_real_ce1);
    temp1_real_U->we1(temp1_real_we1);
    temp1_real_U->d1(reg_433);
    temp1_real_U->q1(temp1_real_q1);
    temp1_imag_U = new FFT_stages_temp1_real("temp1_imag_U");
    temp1_imag_U->clk(ap_clk);
    temp1_imag_U->reset(ap_rst);
    temp1_imag_U->address0(temp1_imag_address0);
    temp1_imag_U->ce0(temp1_imag_ce0);
    temp1_imag_U->we0(temp1_imag_we0);
    temp1_imag_U->d0(reg_424);
    temp1_imag_U->q0(temp1_imag_q0);
    temp1_imag_U->address1(temp1_imag_address1);
    temp1_imag_U->ce1(temp1_imag_ce1);
    temp1_imag_U->we1(temp1_imag_we1);
    temp1_imag_U->d1(reg_440);
    temp1_imag_U->q1(temp1_imag_q1);
    temp2_real_U = new FFT_stages_temp2_real("temp2_real_U");
    temp2_real_U->clk(ap_clk);
    temp2_real_U->reset(ap_rst);
    temp2_real_U->address0(temp2_real_address0);
    temp2_real_U->ce0(temp2_real_ce0);
    temp2_real_U->we0(temp2_real_we0);
    temp2_real_U->d0(temp2_real_d0);
    temp2_real_U->q0(temp2_real_q0);
    temp2_imag_U = new FFT_stages_temp2_real("temp2_imag_U");
    temp2_imag_U->clk(ap_clk);
    temp2_imag_U->reset(ap_rst);
    temp2_imag_U->address0(temp2_imag_address0);
    temp2_imag_U->ce0(temp2_imag_ce0);
    temp2_imag_U->we0(temp2_imag_we0);
    temp2_imag_U->d0(temp2_imag_d0);
    temp2_imag_U->q0(temp2_imag_q0);
    FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1 = new FFT_faddfsub_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1");
    FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->clk(ap_clk);
    FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->reset(ap_rst);
    FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->din0(grp_fu_375_p0);
    FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->din1(grp_fu_375_p1);
    FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->opcode(grp_fu_375_opcode);
    FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->ce(ap_var_for_const0);
    FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1->dout(grp_fu_375_p2);
    FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2 = new FFT_fadd_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2");
    FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2->clk(ap_clk);
    FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2->reset(ap_rst);
    FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2->din0(grp_fu_379_p0);
    FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2->din1(grp_fu_379_p1);
    FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2->ce(ap_var_for_const0);
    FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2->dout(grp_fu_379_p2);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3 = new FFT_fsub_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3");
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3->clk(ap_clk);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3->reset(ap_rst);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3->din0(grp_fu_383_p0);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3->din1(grp_fu_383_p1);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3->ce(ap_var_for_const0);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3->dout(grp_fu_383_p2);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4 = new FFT_fsub_32ns_32ns_32_5_full_dsp_1<1,5,32,32,32>("FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4");
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4->clk(ap_clk);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4->reset(ap_rst);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4->din0(grp_fu_387_p0);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4->din1(grp_fu_387_p1);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4->ce(ap_var_for_const0);
    FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4->dout(grp_fu_387_p2);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5 = new FFT_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5");
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5->clk(ap_clk);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5->reset(ap_rst);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5->din0(grp_fu_391_p0);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5->din1(grp_fu_391_p1);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5->ce(ap_var_for_const0);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5->dout(grp_fu_391_p2);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6 = new FFT_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6");
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6->clk(ap_clk);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6->reset(ap_rst);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6->din0(grp_fu_396_p0);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6->din1(grp_fu_396_p1);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6->ce(ap_var_for_const0);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6->dout(grp_fu_396_p2);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7 = new FFT_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7");
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7->clk(ap_clk);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7->reset(ap_rst);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7->din0(grp_fu_401_p0);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7->din1(grp_fu_401_p1);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7->ce(ap_var_for_const0);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7->dout(grp_fu_401_p2);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8 = new FFT_fmul_32ns_32ns_32_4_max_dsp_1<1,4,32,32,32>("FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8");
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8->clk(ap_clk);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8->reset(ap_rst);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8->din0(grp_fu_406_p0);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8->din1(grp_fu_406_p1);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8->ce(ap_var_for_const0);
    FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8->dout(grp_fu_406_p2);
    FFT_mux_42_32_1_1_U9 = new FFT_mux_42_32_1_1<1,1,32,32,32,32,2,32>("FFT_mux_42_32_1_1_U9");
    FFT_mux_42_32_1_1_U9->din0(ap_var_for_const1);
    FFT_mux_42_32_1_1_U9->din1(ap_var_for_const2);
    FFT_mux_42_32_1_1_U9->din2(ap_var_for_const3);
    FFT_mux_42_32_1_1_U9->din3(ap_var_for_const4);
    FFT_mux_42_32_1_1_U9->din4(trunc_ln43_fu_663_p1);
    FFT_mux_42_32_1_1_U9->dout(tmp_25_fu_667_p6);
    FFT_mux_42_32_1_1_U10 = new FFT_mux_42_32_1_1<1,1,32,32,32,32,2,32>("FFT_mux_42_32_1_1_U10");
    FFT_mux_42_32_1_1_U10->din0(ap_var_for_const3);
    FFT_mux_42_32_1_1_U10->din1(ap_var_for_const4);
    FFT_mux_42_32_1_1_U10->din2(ap_var_for_const5);
    FFT_mux_42_32_1_1_U10->din3(ap_var_for_const4);
    FFT_mux_42_32_1_1_U10->din4(trunc_ln43_fu_663_p1);
    FFT_mux_42_32_1_1_U10->dout(tmp_26_fu_683_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FFT_input_imag_address0);
    sensitive << ( zext_ln29_fu_509_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_FFT_input_imag_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln29_1_fu_525_p1 );

    SC_METHOD(thread_FFT_input_imag_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_FFT_input_imag_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_FFT_input_real_address0);
    sensitive << ( zext_ln29_fu_509_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_FFT_input_real_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln29_1_fu_525_p1 );

    SC_METHOD(thread_FFT_input_real_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_FFT_input_real_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_FFT_output_imag_address0);
    sensitive << ( zext_ln43_reg_875 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_imag_address1);
    sensitive << ( zext_ln43_1_reg_847 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_imag_ce0);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_imag_ce1);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_imag_d0);
    sensitive << ( reg_424 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_imag_d1);
    sensitive << ( reg_440 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_imag_we0);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_imag_we1);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_real_address0);
    sensitive << ( zext_ln43_reg_875 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_real_address1);
    sensitive << ( zext_ln43_1_reg_847 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_real_ce0);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_real_ce1);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_real_d0);
    sensitive << ( reg_415 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_real_d1);
    sensitive << ( reg_433 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_real_we0);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_FFT_output_real_we1);
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_add_ln36_fu_585_p2);
    sensitive << ( zext_ln36_2_reg_772 );
    sensitive << ( zext_ln35_fu_559_p1 );

    SC_METHOD(thread_add_ln_fu_626_p3);
    sensitive << ( tmp_24_reg_785 );
    sensitive << ( j_0_reg_351 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( icmp_ln42_fu_639_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( icmp_ln42_fu_639_p2 );

    SC_METHOD(thread_grp_fu_375_opcode);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_375_p0);
    sensitive << ( reg_447 );
    sensitive << ( reg_465 );
    sensitive << ( reg_485 );
    sensitive << ( FFT_input_real_load_reg_745 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_375_p1);
    sensitive << ( reg_415 );
    sensitive << ( reg_470 );
    sensitive << ( FFT_input_real_load_1_reg_757 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_379_p0);
    sensitive << ( reg_456 );
    sensitive << ( reg_475 );
    sensitive << ( reg_493 );
    sensitive << ( FFT_input_imag_load_reg_751 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_379_p1);
    sensitive << ( reg_424 );
    sensitive << ( reg_480 );
    sensitive << ( FFT_input_imag_load_1_reg_763 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_383_p0);
    sensitive << ( reg_447 );
    sensitive << ( reg_485 );
    sensitive << ( FFT_input_real_load_reg_745 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_383_p1);
    sensitive << ( reg_415 );
    sensitive << ( FFT_input_real_load_1_reg_757 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_387_p0);
    sensitive << ( reg_456 );
    sensitive << ( reg_493 );
    sensitive << ( FFT_input_imag_load_reg_751 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_387_p1);
    sensitive << ( reg_424 );
    sensitive << ( FFT_input_imag_load_1_reg_763 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_391_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( select_ln36_fu_606_p3 );
    sensitive << ( tmp_25_fu_667_p6 );

    SC_METHOD(thread_grp_fu_391_p1);
    sensitive << ( temp1_real_q0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( temp2_real_q0 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_grp_fu_396_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( select_ln36_1_fu_616_p3 );
    sensitive << ( tmp_26_fu_683_p6 );

    SC_METHOD(thread_grp_fu_396_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( temp1_imag_q0 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( temp2_imag_q0 );

    SC_METHOD(thread_grp_fu_401_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( select_ln36_1_fu_616_p3 );
    sensitive << ( tmp_26_fu_683_p6 );

    SC_METHOD(thread_grp_fu_401_p1);
    sensitive << ( temp1_real_q0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( temp2_real_q0 );
    sensitive << ( ap_CS_fsm_state29 );

    SC_METHOD(thread_grp_fu_406_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( select_ln36_fu_606_p3 );
    sensitive << ( tmp_25_fu_667_p6 );

    SC_METHOD(thread_grp_fu_406_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( temp1_imag_q0 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( temp2_imag_q0 );

    SC_METHOD(thread_i_4_fu_645_p2);
    sensitive << ( i_2_reg_363 );

    SC_METHOD(thread_i_5_fu_596_p2);
    sensitive << ( i_1_reg_339 );

    SC_METHOD(thread_i_fu_531_p2);
    sensitive << ( i_0_reg_328 );

    SC_METHOD(thread_icmp_ln35_fu_563_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( j_0_reg_351 );

    SC_METHOD(thread_icmp_ln42_fu_639_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( i_2_reg_363 );

    SC_METHOD(thread_j_fu_569_p2);
    sensitive << ( j_0_reg_351 );

    SC_METHOD(thread_or_ln29_fu_519_p2);
    sensitive << ( trunc_ln28_fu_515_p1 );

    SC_METHOD(thread_or_ln36_fu_549_p2);
    sensitive << ( trunc_ln34_fu_545_p1 );

    SC_METHOD(thread_select_ln36_1_fu_616_p3);
    sensitive << ( trunc_ln36_fu_602_p1 );

    SC_METHOD(thread_select_ln36_fu_606_p3);
    sensitive << ( trunc_ln36_fu_602_p1 );

    SC_METHOD(thread_temp1_imag_address0);
    sensitive << ( zext_ln29_reg_708 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln36_1_fu_590_p1 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_imag_address1);
    sensitive << ( zext_ln29_1_reg_724 );
    sensitive << ( zext_ln36_fu_633_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_imag_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_imag_ce1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_imag_we0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_imag_we1);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_real_address0);
    sensitive << ( zext_ln29_reg_708 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln36_1_fu_590_p1 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_real_address1);
    sensitive << ( zext_ln29_1_reg_724 );
    sensitive << ( zext_ln36_fu_633_p1 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_real_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_real_ce1);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_real_we0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp1_real_we1);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp2_imag_address0);
    sensitive << ( zext_ln36_1_reg_790 );
    sensitive << ( zext_ln36_reg_823 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( zext_ln43_1_fu_657_p1 );
    sensitive << ( zext_ln43_fu_699_p1 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_temp2_imag_ce0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_temp2_imag_d0);
    sensitive << ( reg_424 );
    sensitive << ( reg_440 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_temp2_imag_we0);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_temp2_real_address0);
    sensitive << ( zext_ln36_1_reg_790 );
    sensitive << ( zext_ln36_reg_823 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( zext_ln43_1_fu_657_p1 );
    sensitive << ( zext_ln43_fu_699_p1 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_temp2_real_ce0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_temp2_real_d0);
    sensitive << ( reg_415 );
    sensitive << ( reg_433 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_temp2_real_we0);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_tmp_27_fu_501_p3);
    sensitive << ( i_0_reg_328 );

    SC_METHOD(thread_tmp_28_fu_537_p3);
    sensitive << ( i_1_reg_339 );

    SC_METHOD(thread_trunc_ln28_fu_515_p1);
    sensitive << ( i_0_reg_328 );

    SC_METHOD(thread_trunc_ln34_fu_545_p1);
    sensitive << ( i_1_reg_339 );

    SC_METHOD(thread_trunc_ln36_fu_602_p1);
    sensitive << ( j_0_reg_351 );

    SC_METHOD(thread_trunc_ln43_fu_663_p1);
    sensitive << ( i_2_reg_363 );

    SC_METHOD(thread_xor_ln43_fu_651_p2);
    sensitive << ( i_2_reg_363 );

    SC_METHOD(thread_zext_ln29_1_fu_525_p1);
    sensitive << ( or_ln29_fu_519_p2 );

    SC_METHOD(thread_zext_ln29_fu_509_p1);
    sensitive << ( i_0_reg_328 );

    SC_METHOD(thread_zext_ln35_fu_559_p1);
    sensitive << ( j_0_reg_351 );

    SC_METHOD(thread_zext_ln36_1_fu_590_p1);
    sensitive << ( add_ln36_fu_585_p2 );

    SC_METHOD(thread_zext_ln36_2_fu_555_p1);
    sensitive << ( or_ln36_fu_549_p2 );

    SC_METHOD(thread_zext_ln36_fu_633_p1);
    sensitive << ( add_ln_fu_626_p3 );

    SC_METHOD(thread_zext_ln43_1_fu_657_p1);
    sensitive << ( xor_ln43_fu_651_p2 );

    SC_METHOD(thread_zext_ln43_fu_699_p1);
    sensitive << ( i_2_reg_363 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_27_fu_501_p3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_28_fu_537_p3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln35_fu_563_p2 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( icmp_ln42_fu_639_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const4);

    ap_CS_fsm = "0000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "FFT_stages_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, FFT_input_real_address0, "(port)FFT_input_real_address0");
    sc_trace(mVcdFile, FFT_input_real_ce0, "(port)FFT_input_real_ce0");
    sc_trace(mVcdFile, FFT_input_real_q0, "(port)FFT_input_real_q0");
    sc_trace(mVcdFile, FFT_input_real_address1, "(port)FFT_input_real_address1");
    sc_trace(mVcdFile, FFT_input_real_ce1, "(port)FFT_input_real_ce1");
    sc_trace(mVcdFile, FFT_input_real_q1, "(port)FFT_input_real_q1");
    sc_trace(mVcdFile, FFT_input_imag_address0, "(port)FFT_input_imag_address0");
    sc_trace(mVcdFile, FFT_input_imag_ce0, "(port)FFT_input_imag_ce0");
    sc_trace(mVcdFile, FFT_input_imag_q0, "(port)FFT_input_imag_q0");
    sc_trace(mVcdFile, FFT_input_imag_address1, "(port)FFT_input_imag_address1");
    sc_trace(mVcdFile, FFT_input_imag_ce1, "(port)FFT_input_imag_ce1");
    sc_trace(mVcdFile, FFT_input_imag_q1, "(port)FFT_input_imag_q1");
    sc_trace(mVcdFile, FFT_output_real_address0, "(port)FFT_output_real_address0");
    sc_trace(mVcdFile, FFT_output_real_ce0, "(port)FFT_output_real_ce0");
    sc_trace(mVcdFile, FFT_output_real_we0, "(port)FFT_output_real_we0");
    sc_trace(mVcdFile, FFT_output_real_d0, "(port)FFT_output_real_d0");
    sc_trace(mVcdFile, FFT_output_real_address1, "(port)FFT_output_real_address1");
    sc_trace(mVcdFile, FFT_output_real_ce1, "(port)FFT_output_real_ce1");
    sc_trace(mVcdFile, FFT_output_real_we1, "(port)FFT_output_real_we1");
    sc_trace(mVcdFile, FFT_output_real_d1, "(port)FFT_output_real_d1");
    sc_trace(mVcdFile, FFT_output_imag_address0, "(port)FFT_output_imag_address0");
    sc_trace(mVcdFile, FFT_output_imag_ce0, "(port)FFT_output_imag_ce0");
    sc_trace(mVcdFile, FFT_output_imag_we0, "(port)FFT_output_imag_we0");
    sc_trace(mVcdFile, FFT_output_imag_d0, "(port)FFT_output_imag_d0");
    sc_trace(mVcdFile, FFT_output_imag_address1, "(port)FFT_output_imag_address1");
    sc_trace(mVcdFile, FFT_output_imag_ce1, "(port)FFT_output_imag_ce1");
    sc_trace(mVcdFile, FFT_output_imag_we1, "(port)FFT_output_imag_we1");
    sc_trace(mVcdFile, FFT_output_imag_d1, "(port)FFT_output_imag_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_375_p2, "grp_fu_375_p2");
    sc_trace(mVcdFile, reg_415, "reg_415");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, grp_fu_379_p2, "grp_fu_379_p2");
    sc_trace(mVcdFile, reg_424, "reg_424");
    sc_trace(mVcdFile, grp_fu_383_p2, "grp_fu_383_p2");
    sc_trace(mVcdFile, reg_433, "reg_433");
    sc_trace(mVcdFile, grp_fu_387_p2, "grp_fu_387_p2");
    sc_trace(mVcdFile, reg_440, "reg_440");
    sc_trace(mVcdFile, temp1_real_q0, "temp1_real_q0");
    sc_trace(mVcdFile, reg_447, "reg_447");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, temp1_real_q1, "temp1_real_q1");
    sc_trace(mVcdFile, temp1_imag_q0, "temp1_imag_q0");
    sc_trace(mVcdFile, reg_456, "reg_456");
    sc_trace(mVcdFile, temp1_imag_q1, "temp1_imag_q1");
    sc_trace(mVcdFile, grp_fu_391_p2, "grp_fu_391_p2");
    sc_trace(mVcdFile, reg_465, "reg_465");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_fu_396_p2, "grp_fu_396_p2");
    sc_trace(mVcdFile, reg_470, "reg_470");
    sc_trace(mVcdFile, grp_fu_401_p2, "grp_fu_401_p2");
    sc_trace(mVcdFile, reg_475, "reg_475");
    sc_trace(mVcdFile, grp_fu_406_p2, "grp_fu_406_p2");
    sc_trace(mVcdFile, reg_480, "reg_480");
    sc_trace(mVcdFile, temp2_real_q0, "temp2_real_q0");
    sc_trace(mVcdFile, reg_485, "reg_485");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, temp2_imag_q0, "temp2_imag_q0");
    sc_trace(mVcdFile, reg_493, "reg_493");
    sc_trace(mVcdFile, zext_ln29_fu_509_p1, "zext_ln29_fu_509_p1");
    sc_trace(mVcdFile, zext_ln29_reg_708, "zext_ln29_reg_708");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_27_fu_501_p3, "tmp_27_fu_501_p3");
    sc_trace(mVcdFile, zext_ln29_1_fu_525_p1, "zext_ln29_1_fu_525_p1");
    sc_trace(mVcdFile, zext_ln29_1_reg_724, "zext_ln29_1_reg_724");
    sc_trace(mVcdFile, i_fu_531_p2, "i_fu_531_p2");
    sc_trace(mVcdFile, i_reg_740, "i_reg_740");
    sc_trace(mVcdFile, FFT_input_real_load_reg_745, "FFT_input_real_load_reg_745");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, FFT_input_imag_load_reg_751, "FFT_input_imag_load_reg_751");
    sc_trace(mVcdFile, FFT_input_real_load_1_reg_757, "FFT_input_real_load_1_reg_757");
    sc_trace(mVcdFile, FFT_input_imag_load_1_reg_763, "FFT_input_imag_load_1_reg_763");
    sc_trace(mVcdFile, zext_ln36_2_fu_555_p1, "zext_ln36_2_fu_555_p1");
    sc_trace(mVcdFile, zext_ln36_2_reg_772, "zext_ln36_2_reg_772");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_28_fu_537_p3, "tmp_28_fu_537_p3");
    sc_trace(mVcdFile, j_fu_569_p2, "j_fu_569_p2");
    sc_trace(mVcdFile, j_reg_780, "j_reg_780");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_24_reg_785, "tmp_24_reg_785");
    sc_trace(mVcdFile, icmp_ln35_fu_563_p2, "icmp_ln35_fu_563_p2");
    sc_trace(mVcdFile, zext_ln36_1_fu_590_p1, "zext_ln36_1_fu_590_p1");
    sc_trace(mVcdFile, zext_ln36_1_reg_790, "zext_ln36_1_reg_790");
    sc_trace(mVcdFile, i_5_fu_596_p2, "i_5_fu_596_p2");
    sc_trace(mVcdFile, select_ln36_fu_606_p3, "select_ln36_fu_606_p3");
    sc_trace(mVcdFile, select_ln36_1_fu_616_p3, "select_ln36_1_fu_616_p3");
    sc_trace(mVcdFile, zext_ln36_fu_633_p1, "zext_ln36_fu_633_p1");
    sc_trace(mVcdFile, zext_ln36_reg_823, "zext_ln36_reg_823");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, i_4_fu_645_p2, "i_4_fu_645_p2");
    sc_trace(mVcdFile, i_4_reg_842, "i_4_reg_842");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, zext_ln43_1_fu_657_p1, "zext_ln43_1_fu_657_p1");
    sc_trace(mVcdFile, zext_ln43_1_reg_847, "zext_ln43_1_reg_847");
    sc_trace(mVcdFile, icmp_ln42_fu_639_p2, "icmp_ln42_fu_639_p2");
    sc_trace(mVcdFile, tmp_25_fu_667_p6, "tmp_25_fu_667_p6");
    sc_trace(mVcdFile, tmp_26_fu_683_p6, "tmp_26_fu_683_p6");
    sc_trace(mVcdFile, zext_ln43_fu_699_p1, "zext_ln43_fu_699_p1");
    sc_trace(mVcdFile, zext_ln43_reg_875, "zext_ln43_reg_875");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, temp1_real_address0, "temp1_real_address0");
    sc_trace(mVcdFile, temp1_real_ce0, "temp1_real_ce0");
    sc_trace(mVcdFile, temp1_real_we0, "temp1_real_we0");
    sc_trace(mVcdFile, temp1_real_address1, "temp1_real_address1");
    sc_trace(mVcdFile, temp1_real_ce1, "temp1_real_ce1");
    sc_trace(mVcdFile, temp1_real_we1, "temp1_real_we1");
    sc_trace(mVcdFile, temp1_imag_address0, "temp1_imag_address0");
    sc_trace(mVcdFile, temp1_imag_ce0, "temp1_imag_ce0");
    sc_trace(mVcdFile, temp1_imag_we0, "temp1_imag_we0");
    sc_trace(mVcdFile, temp1_imag_address1, "temp1_imag_address1");
    sc_trace(mVcdFile, temp1_imag_ce1, "temp1_imag_ce1");
    sc_trace(mVcdFile, temp1_imag_we1, "temp1_imag_we1");
    sc_trace(mVcdFile, temp2_real_address0, "temp2_real_address0");
    sc_trace(mVcdFile, temp2_real_ce0, "temp2_real_ce0");
    sc_trace(mVcdFile, temp2_real_we0, "temp2_real_we0");
    sc_trace(mVcdFile, temp2_real_d0, "temp2_real_d0");
    sc_trace(mVcdFile, temp2_imag_address0, "temp2_imag_address0");
    sc_trace(mVcdFile, temp2_imag_ce0, "temp2_imag_ce0");
    sc_trace(mVcdFile, temp2_imag_we0, "temp2_imag_we0");
    sc_trace(mVcdFile, temp2_imag_d0, "temp2_imag_d0");
    sc_trace(mVcdFile, i_0_reg_328, "i_0_reg_328");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_1_reg_339, "i_1_reg_339");
    sc_trace(mVcdFile, j_0_reg_351, "j_0_reg_351");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, i_2_reg_363, "i_2_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_fu_375_p0, "grp_fu_375_p0");
    sc_trace(mVcdFile, grp_fu_375_p1, "grp_fu_375_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, grp_fu_379_p0, "grp_fu_379_p0");
    sc_trace(mVcdFile, grp_fu_379_p1, "grp_fu_379_p1");
    sc_trace(mVcdFile, grp_fu_383_p0, "grp_fu_383_p0");
    sc_trace(mVcdFile, grp_fu_383_p1, "grp_fu_383_p1");
    sc_trace(mVcdFile, grp_fu_387_p0, "grp_fu_387_p0");
    sc_trace(mVcdFile, grp_fu_387_p1, "grp_fu_387_p1");
    sc_trace(mVcdFile, grp_fu_391_p0, "grp_fu_391_p0");
    sc_trace(mVcdFile, grp_fu_391_p1, "grp_fu_391_p1");
    sc_trace(mVcdFile, grp_fu_396_p0, "grp_fu_396_p0");
    sc_trace(mVcdFile, grp_fu_396_p1, "grp_fu_396_p1");
    sc_trace(mVcdFile, grp_fu_401_p0, "grp_fu_401_p0");
    sc_trace(mVcdFile, grp_fu_401_p1, "grp_fu_401_p1");
    sc_trace(mVcdFile, grp_fu_406_p0, "grp_fu_406_p0");
    sc_trace(mVcdFile, grp_fu_406_p1, "grp_fu_406_p1");
    sc_trace(mVcdFile, trunc_ln28_fu_515_p1, "trunc_ln28_fu_515_p1");
    sc_trace(mVcdFile, or_ln29_fu_519_p2, "or_ln29_fu_519_p2");
    sc_trace(mVcdFile, trunc_ln34_fu_545_p1, "trunc_ln34_fu_545_p1");
    sc_trace(mVcdFile, or_ln36_fu_549_p2, "or_ln36_fu_549_p2");
    sc_trace(mVcdFile, zext_ln35_fu_559_p1, "zext_ln35_fu_559_p1");
    sc_trace(mVcdFile, add_ln36_fu_585_p2, "add_ln36_fu_585_p2");
    sc_trace(mVcdFile, trunc_ln36_fu_602_p1, "trunc_ln36_fu_602_p1");
    sc_trace(mVcdFile, add_ln_fu_626_p3, "add_ln_fu_626_p3");
    sc_trace(mVcdFile, xor_ln43_fu_651_p2, "xor_ln43_fu_651_p2");
    sc_trace(mVcdFile, trunc_ln43_fu_663_p1, "trunc_ln43_fu_663_p1");
    sc_trace(mVcdFile, grp_fu_375_opcode, "grp_fu_375_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

FFT_stages::~FFT_stages() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete temp1_real_U;
    delete temp1_imag_U;
    delete temp2_real_U;
    delete temp2_imag_U;
    delete FFT_faddfsub_32ns_32ns_32_5_full_dsp_1_U1;
    delete FFT_fadd_32ns_32ns_32_5_full_dsp_1_U2;
    delete FFT_fsub_32ns_32ns_32_5_full_dsp_1_U3;
    delete FFT_fsub_32ns_32ns_32_5_full_dsp_1_U4;
    delete FFT_fmul_32ns_32ns_32_4_max_dsp_1_U5;
    delete FFT_fmul_32ns_32ns_32_4_max_dsp_1_U6;
    delete FFT_fmul_32ns_32ns_32_4_max_dsp_1_U7;
    delete FFT_fmul_32ns_32ns_32_4_max_dsp_1_U8;
    delete FFT_mux_42_32_1_1_U9;
    delete FFT_mux_42_32_1_1_U10;
}

void FFT_stages::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void FFT_stages::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_0;
}

void FFT_stages::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void FFT_stages::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv32_BF800000;
}

void FFT_stages::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_3F3504F3;
}

void FFT_stages::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv32_BF3504F3;
}

void FFT_stages::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_0_reg_328 = i_reg_740.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_328 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_27_fu_501_p3.read(), ap_const_lv1_1))) {
        i_1_reg_339 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(icmp_ln35_fu_563_p2.read(), ap_const_lv1_1))) {
        i_1_reg_339 = i_5_fu_596_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(tmp_28_fu_537_p3.read(), ap_const_lv1_1))) {
        i_2_reg_363 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        i_2_reg_363 = i_4_reg_842.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        j_0_reg_351 = j_reg_780.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_fu_537_p3.read()))) {
        j_0_reg_351 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        reg_447 = temp1_real_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        reg_447 = temp1_real_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        reg_456 = temp1_imag_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        reg_456 = temp1_imag_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        FFT_input_imag_load_1_reg_763 = FFT_input_imag_q1.read();
        FFT_input_imag_load_reg_751 = FFT_input_imag_q0.read();
        FFT_input_real_load_1_reg_757 = FFT_input_real_q1.read();
        FFT_input_real_load_reg_745 = FFT_input_real_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        i_4_reg_842 = i_4_fu_645_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_27_fu_501_p3.read(), ap_const_lv1_0))) {
        i_reg_740 = i_fu_531_p2.read();
        zext_ln29_1_reg_724 = zext_ln29_1_fu_525_p1.read();
        zext_ln29_reg_708 = zext_ln29_fu_509_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_reg_780 = j_fu_569_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        reg_415 = grp_fu_375_p2.read();
        reg_424 = grp_fu_379_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        reg_433 = grp_fu_383_p2.read();
        reg_440 = grp_fu_387_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        reg_465 = grp_fu_391_p2.read();
        reg_470 = grp_fu_396_p2.read();
        reg_475 = grp_fu_401_p2.read();
        reg_480 = grp_fu_406_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        reg_485 = temp2_real_q0.read();
        reg_493 = temp2_imag_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_563_p2.read()))) {
        tmp_24_reg_785 = i_1_reg_339.read().range(3, 2);
        zext_ln36_1_reg_790 = zext_ln36_1_fu_590_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_fu_537_p3.read()))) {
        zext_ln36_2_reg_772 = zext_ln36_2_fu_555_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        zext_ln36_reg_823 = zext_ln36_fu_633_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln42_fu_639_p2.read()))) {
        zext_ln43_1_reg_847 = zext_ln43_1_fu_657_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        zext_ln43_reg_875 = zext_ln43_fu_699_p1.read();
    }
}

void FFT_stages::thread_FFT_input_imag_address0() {
    FFT_input_imag_address0 =  (sc_lv<3>) (zext_ln29_fu_509_p1.read());
}

void FFT_stages::thread_FFT_input_imag_address1() {
    FFT_input_imag_address1 =  (sc_lv<3>) (zext_ln29_1_fu_525_p1.read());
}

void FFT_stages::thread_FFT_input_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        FFT_input_imag_ce0 = ap_const_logic_1;
    } else {
        FFT_input_imag_ce0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_input_imag_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        FFT_input_imag_ce1 = ap_const_logic_1;
    } else {
        FFT_input_imag_ce1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_input_real_address0() {
    FFT_input_real_address0 =  (sc_lv<3>) (zext_ln29_fu_509_p1.read());
}

void FFT_stages::thread_FFT_input_real_address1() {
    FFT_input_real_address1 =  (sc_lv<3>) (zext_ln29_1_fu_525_p1.read());
}

void FFT_stages::thread_FFT_input_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        FFT_input_real_ce0 = ap_const_logic_1;
    } else {
        FFT_input_real_ce0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_input_real_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        FFT_input_real_ce1 = ap_const_logic_1;
    } else {
        FFT_input_real_ce1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_output_imag_address0() {
    FFT_output_imag_address0 =  (sc_lv<3>) (zext_ln43_reg_875.read());
}

void FFT_stages::thread_FFT_output_imag_address1() {
    FFT_output_imag_address1 =  (sc_lv<3>) (zext_ln43_1_reg_847.read());
}

void FFT_stages::thread_FFT_output_imag_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        FFT_output_imag_ce0 = ap_const_logic_1;
    } else {
        FFT_output_imag_ce0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_output_imag_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        FFT_output_imag_ce1 = ap_const_logic_1;
    } else {
        FFT_output_imag_ce1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_output_imag_d0() {
    FFT_output_imag_d0 = reg_424.read();
}

void FFT_stages::thread_FFT_output_imag_d1() {
    FFT_output_imag_d1 = reg_440.read();
}

void FFT_stages::thread_FFT_output_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        FFT_output_imag_we0 = ap_const_logic_1;
    } else {
        FFT_output_imag_we0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_output_imag_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        FFT_output_imag_we1 = ap_const_logic_1;
    } else {
        FFT_output_imag_we1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_output_real_address0() {
    FFT_output_real_address0 =  (sc_lv<3>) (zext_ln43_reg_875.read());
}

void FFT_stages::thread_FFT_output_real_address1() {
    FFT_output_real_address1 =  (sc_lv<3>) (zext_ln43_1_reg_847.read());
}

void FFT_stages::thread_FFT_output_real_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        FFT_output_real_ce0 = ap_const_logic_1;
    } else {
        FFT_output_real_ce0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_output_real_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        FFT_output_real_ce1 = ap_const_logic_1;
    } else {
        FFT_output_real_ce1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_output_real_d0() {
    FFT_output_real_d0 = reg_415.read();
}

void FFT_stages::thread_FFT_output_real_d1() {
    FFT_output_real_d1 = reg_433.read();
}

void FFT_stages::thread_FFT_output_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        FFT_output_real_we0 = ap_const_logic_1;
    } else {
        FFT_output_real_we0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_FFT_output_real_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        FFT_output_real_we1 = ap_const_logic_1;
    } else {
        FFT_output_real_we1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_add_ln36_fu_585_p2() {
    add_ln36_fu_585_p2 = (!zext_ln35_fu_559_p1.read().is_01() || !zext_ln36_2_reg_772.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln35_fu_559_p1.read()) + sc_biguint<4>(zext_ln36_2_reg_772.read()));
}

void FFT_stages::thread_add_ln_fu_626_p3() {
    add_ln_fu_626_p3 = esl_concat<2,2>(tmp_24_reg_785.read(), j_0_reg_351.read());
}

void FFT_stages::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void FFT_stages::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void FFT_stages::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void FFT_stages::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void FFT_stages::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void FFT_stages::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void FFT_stages::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void FFT_stages::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void FFT_stages::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void FFT_stages::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void FFT_stages::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void FFT_stages::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void FFT_stages::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void FFT_stages::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void FFT_stages::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void FFT_stages::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void FFT_stages::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void FFT_stages::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void FFT_stages::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void FFT_stages::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void FFT_stages::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void FFT_stages::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void FFT_stages::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void FFT_stages::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void FFT_stages::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void FFT_stages::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void FFT_stages::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_639_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void FFT_stages::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void FFT_stages::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_639_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void FFT_stages::thread_grp_fu_375_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        grp_fu_375_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        grp_fu_375_opcode = ap_const_lv2_0;
    } else {
        grp_fu_375_opcode = "XX";
    }
}

void FFT_stages::thread_grp_fu_375_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_375_p0 = reg_485.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_375_p0 = reg_447.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        grp_fu_375_p0 = reg_465.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_375_p0 = FFT_input_real_load_reg_745.read();
    } else {
        grp_fu_375_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_375_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        grp_fu_375_p1 = reg_415.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        grp_fu_375_p1 = reg_470.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_375_p1 = FFT_input_real_load_1_reg_757.read();
    } else {
        grp_fu_375_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_379_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_379_p0 = reg_493.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_379_p0 = reg_456.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        grp_fu_379_p0 = reg_475.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_379_p0 = FFT_input_imag_load_reg_751.read();
    } else {
        grp_fu_379_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_379_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        grp_fu_379_p1 = reg_424.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()))) {
        grp_fu_379_p1 = reg_480.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_379_p1 = FFT_input_imag_load_1_reg_763.read();
    } else {
        grp_fu_379_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_383_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_383_p0 = reg_485.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_383_p0 = reg_447.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_383_p0 = FFT_input_real_load_reg_745.read();
    } else {
        grp_fu_383_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_383_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        grp_fu_383_p1 = reg_415.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_383_p1 = FFT_input_real_load_1_reg_757.read();
    } else {
        grp_fu_383_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_387_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        grp_fu_387_p0 = reg_493.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_387_p0 = reg_456.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_387_p0 = FFT_input_imag_load_reg_751.read();
    } else {
        grp_fu_387_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_387_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        grp_fu_387_p1 = reg_424.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_387_p1 = FFT_input_imag_load_1_reg_763.read();
    } else {
        grp_fu_387_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_391_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_391_p0 = tmp_25_fu_667_p6.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_391_p0 = select_ln36_fu_606_p3.read();
    } else {
        grp_fu_391_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_391_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_391_p1 = temp2_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_391_p1 = temp1_real_q0.read();
    } else {
        grp_fu_391_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_396_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_396_p0 = tmp_26_fu_683_p6.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_396_p0 = select_ln36_1_fu_616_p3.read();
    } else {
        grp_fu_396_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_396_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_396_p1 = temp2_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_396_p1 = temp1_imag_q0.read();
    } else {
        grp_fu_396_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_401_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_401_p0 = tmp_26_fu_683_p6.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_401_p0 = select_ln36_1_fu_616_p3.read();
    } else {
        grp_fu_401_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_401_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_401_p1 = temp2_real_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_401_p1 = temp1_real_q0.read();
    } else {
        grp_fu_401_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_406_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_406_p0 = tmp_25_fu_667_p6.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_406_p0 = select_ln36_fu_606_p3.read();
    } else {
        grp_fu_406_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_grp_fu_406_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_406_p1 = temp2_imag_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_406_p1 = temp1_imag_q0.read();
    } else {
        grp_fu_406_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_i_4_fu_645_p2() {
    i_4_fu_645_p2 = (!i_2_reg_363.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_2_reg_363.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void FFT_stages::thread_i_5_fu_596_p2() {
    i_5_fu_596_p2 = (!i_1_reg_339.read().is_01() || !ap_const_lv4_4.is_01())? sc_lv<4>(): (sc_biguint<4>(i_1_reg_339.read()) + sc_biguint<4>(ap_const_lv4_4));
}

void FFT_stages::thread_i_fu_531_p2() {
    i_fu_531_p2 = (!ap_const_lv4_2.is_01() || !i_0_reg_328.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_2) + sc_biguint<4>(i_0_reg_328.read()));
}

void FFT_stages::thread_icmp_ln35_fu_563_p2() {
    icmp_ln35_fu_563_p2 = (!j_0_reg_351.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_351.read() == ap_const_lv2_2);
}

void FFT_stages::thread_icmp_ln42_fu_639_p2() {
    icmp_ln42_fu_639_p2 = (!i_2_reg_363.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_2_reg_363.read() == ap_const_lv3_4);
}

void FFT_stages::thread_j_fu_569_p2() {
    j_fu_569_p2 = (!j_0_reg_351.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0_reg_351.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void FFT_stages::thread_or_ln29_fu_519_p2() {
    or_ln29_fu_519_p2 = (trunc_ln28_fu_515_p1.read() | ap_const_lv3_1);
}

void FFT_stages::thread_or_ln36_fu_549_p2() {
    or_ln36_fu_549_p2 = (trunc_ln34_fu_545_p1.read() | ap_const_lv3_2);
}

void FFT_stages::thread_select_ln36_1_fu_616_p3() {
    select_ln36_1_fu_616_p3 = (!trunc_ln36_fu_602_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln36_fu_602_p1.read()[0].to_bool())? ap_const_lv32_BF800000: ap_const_lv32_0);
}

void FFT_stages::thread_select_ln36_fu_606_p3() {
    select_ln36_fu_606_p3 = (!trunc_ln36_fu_602_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln36_fu_602_p1.read()[0].to_bool())? ap_const_lv32_0: ap_const_lv32_3F800000);
}

void FFT_stages::thread_temp1_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp1_imag_address0 =  (sc_lv<3>) (zext_ln36_1_fu_590_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_imag_address0 =  (sc_lv<3>) (zext_ln29_reg_708.read());
    } else {
        temp1_imag_address0 =  (sc_lv<3>) ("XXX");
    }
}

void FFT_stages::thread_temp1_imag_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        temp1_imag_address1 =  (sc_lv<3>) (zext_ln36_fu_633_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_imag_address1 =  (sc_lv<3>) (zext_ln29_1_reg_724.read());
    } else {
        temp1_imag_address1 =  (sc_lv<3>) ("XXX");
    }
}

void FFT_stages::thread_temp1_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        temp1_imag_ce0 = ap_const_logic_1;
    } else {
        temp1_imag_ce0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp1_imag_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        temp1_imag_ce1 = ap_const_logic_1;
    } else {
        temp1_imag_ce1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp1_imag_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_imag_we0 = ap_const_logic_1;
    } else {
        temp1_imag_we0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp1_imag_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_imag_we1 = ap_const_logic_1;
    } else {
        temp1_imag_we1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp1_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp1_real_address0 =  (sc_lv<3>) (zext_ln36_1_fu_590_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_real_address0 =  (sc_lv<3>) (zext_ln29_reg_708.read());
    } else {
        temp1_real_address0 =  (sc_lv<3>) ("XXX");
    }
}

void FFT_stages::thread_temp1_real_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        temp1_real_address1 =  (sc_lv<3>) (zext_ln36_fu_633_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_real_address1 =  (sc_lv<3>) (zext_ln29_1_reg_724.read());
    } else {
        temp1_real_address1 =  (sc_lv<3>) ("XXX");
    }
}

void FFT_stages::thread_temp1_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        temp1_real_ce0 = ap_const_logic_1;
    } else {
        temp1_real_ce0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp1_real_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        temp1_real_ce1 = ap_const_logic_1;
    } else {
        temp1_real_ce1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp1_real_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_real_we0 = ap_const_logic_1;
    } else {
        temp1_real_we0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp1_real_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp1_real_we1 = ap_const_logic_1;
    } else {
        temp1_real_we1 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp2_imag_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        temp2_imag_address0 =  (sc_lv<3>) (zext_ln43_fu_699_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        temp2_imag_address0 =  (sc_lv<3>) (zext_ln43_1_fu_657_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        temp2_imag_address0 =  (sc_lv<3>) (zext_ln36_1_reg_790.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        temp2_imag_address0 =  (sc_lv<3>) (zext_ln36_reg_823.read());
    } else {
        temp2_imag_address0 =  (sc_lv<3>) ("XXX");
    }
}

void FFT_stages::thread_temp2_imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        temp2_imag_ce0 = ap_const_logic_1;
    } else {
        temp2_imag_ce0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp2_imag_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        temp2_imag_d0 = reg_440.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        temp2_imag_d0 = reg_424.read();
    } else {
        temp2_imag_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_temp2_imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        temp2_imag_we0 = ap_const_logic_1;
    } else {
        temp2_imag_we0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp2_real_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        temp2_real_address0 =  (sc_lv<3>) (zext_ln43_fu_699_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        temp2_real_address0 =  (sc_lv<3>) (zext_ln43_1_fu_657_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        temp2_real_address0 =  (sc_lv<3>) (zext_ln36_1_reg_790.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        temp2_real_address0 =  (sc_lv<3>) (zext_ln36_reg_823.read());
    } else {
        temp2_real_address0 =  (sc_lv<3>) ("XXX");
    }
}

void FFT_stages::thread_temp2_real_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        temp2_real_ce0 = ap_const_logic_1;
    } else {
        temp2_real_ce0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_temp2_real_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        temp2_real_d0 = reg_433.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        temp2_real_d0 = reg_415.read();
    } else {
        temp2_real_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void FFT_stages::thread_temp2_real_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        temp2_real_we0 = ap_const_logic_1;
    } else {
        temp2_real_we0 = ap_const_logic_0;
    }
}

void FFT_stages::thread_tmp_27_fu_501_p3() {
    tmp_27_fu_501_p3 = i_0_reg_328.read().range(3, 3);
}

void FFT_stages::thread_tmp_28_fu_537_p3() {
    tmp_28_fu_537_p3 = i_1_reg_339.read().range(3, 3);
}

void FFT_stages::thread_trunc_ln28_fu_515_p1() {
    trunc_ln28_fu_515_p1 = i_0_reg_328.read().range(3-1, 0);
}

void FFT_stages::thread_trunc_ln34_fu_545_p1() {
    trunc_ln34_fu_545_p1 = i_1_reg_339.read().range(3-1, 0);
}

void FFT_stages::thread_trunc_ln36_fu_602_p1() {
    trunc_ln36_fu_602_p1 = j_0_reg_351.read().range(1-1, 0);
}

void FFT_stages::thread_trunc_ln43_fu_663_p1() {
    trunc_ln43_fu_663_p1 = i_2_reg_363.read().range(2-1, 0);
}

void FFT_stages::thread_xor_ln43_fu_651_p2() {
    xor_ln43_fu_651_p2 = (i_2_reg_363.read() ^ ap_const_lv3_4);
}

void FFT_stages::thread_zext_ln29_1_fu_525_p1() {
    zext_ln29_1_fu_525_p1 = esl_zext<64,3>(or_ln29_fu_519_p2.read());
}

void FFT_stages::thread_zext_ln29_fu_509_p1() {
    zext_ln29_fu_509_p1 = esl_zext<64,4>(i_0_reg_328.read());
}

void FFT_stages::thread_zext_ln35_fu_559_p1() {
    zext_ln35_fu_559_p1 = esl_zext<4,2>(j_0_reg_351.read());
}

void FFT_stages::thread_zext_ln36_1_fu_590_p1() {
    zext_ln36_1_fu_590_p1 = esl_zext<64,4>(add_ln36_fu_585_p2.read());
}

void FFT_stages::thread_zext_ln36_2_fu_555_p1() {
    zext_ln36_2_fu_555_p1 = esl_zext<4,3>(or_ln36_fu_549_p2.read());
}

void FFT_stages::thread_zext_ln36_fu_633_p1() {
    zext_ln36_fu_633_p1 = esl_zext<64,4>(add_ln_fu_626_p3.read());
}

void FFT_stages::thread_zext_ln43_1_fu_657_p1() {
    zext_ln43_1_fu_657_p1 = esl_zext<64,3>(xor_ln43_fu_651_p2.read());
}

void FFT_stages::thread_zext_ln43_fu_699_p1() {
    zext_ln43_fu_699_p1 = esl_zext<64,3>(i_2_reg_363.read());
}

void FFT_stages::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_27_fu_501_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(tmp_28_fu_537_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(icmp_ln35_fu_563_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln42_fu_639_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<43>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

